<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'>
<nta>
	<declaration>// Place global declarations here.

const int numMothers = 1;
const int numGirls = 2;
const int numFathers = 1;
const int numBoys = 2;
const int numPolice = 1;
const int numThiefs = 1;

bool boatSide = false;
bool boatSailing = false;

bool motherSide[numMothers];
bool girlSide[numGirls];
bool fatherSide[numFathers];
bool boySide[numBoys];
bool policeSide[numPolice];
bool thiefSide[numThiefs];

typedef int[0, numMothers-1] mother_t;
typedef int[0, numGirls-1] girl_t;
typedef int[0, numFathers-1] father_t;
typedef int[0, numBoys-1] boy_t;
typedef int[0, numPolice-1] police_t;
typedef int[0, numThiefs-1] thief_t;

clock time;

chan sail_control, sail_passenger;
broadcast chan sail_completed;


</declaration>
	<template>
		<name x="5" y="5">Boat</name>
		<declaration>// Place local declarations here.

int cur_passenger = 0;
int max_passenger = 1;</declaration>
		<location id="id0" x="-459" y="-476">
			<name x="-450" y="-510">TakingPassengers</name>
		</location>
		<location id="id1" x="-552" y="-561">
			<name x="-611" y="-595">OnShore</name>
		</location>
		<init ref="id1"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-773" y="-493">sail_completed?</label>
			<label kind="assignment" x="-773" y="-476">boatSide = !boatSide, cur_passenger = 0</label>
			<nail x="-552" y="-476"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-374" y="-450">cur_passenger &lt; max_passenger</label>
			<label kind="synchronisation" x="-374" y="-433">sail_passenger?</label>
			<label kind="assignment" x="-374" y="-416">cur_passenger++</label>
			<nail x="-459" y="-391"/>
			<nail x="-374" y="-476"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-527" y="-620">sail_control?</label>
			<label kind="assignment" x="-527" y="-603">boatSailing = true</label>
			<nail x="-459" y="-561"/>
		</transition>
	</template>
	<template>
		<name>Mother</name>
		<parameter>int id</parameter>
		<declaration>clock x;
int count = 0;

bool aloneWithBoys(){
    int i;
    for (i = 0 ; i &lt; numFathers ; i++){
        if (fatherSide[i] == motherSide[id]){
            return false;
        }
    }
    for (i = 0 ; i &lt; numBoys ; i++){
        if (boySide[i] == motherSide[id]){
             return true;  
        }
    }
    return false;
}

</declaration>
		<location id="id2" x="-136" y="76">
			<name x="-127" y="51">PassengerOnBoat</name>
		</location>
		<location id="id3" x="-323" y="-68">
			<name x="-348" y="-102">Sailing</name>
		</location>
		<location id="id4" x="-229" y="0">
			<name x="-221" y="-25">OnShore</name>
			<label kind="invariant" x="-357" y="8">!aloneWithBoys()</label>
		</location>
		<init ref="id4"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-382" y="68">sail_completed?</label>
			<label kind="assignment" x="-382" y="85">motherSide[id] = !motherSide[id]</label>
			<nail x="-229" y="76"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="guard" x="-289" y="-153">x == 4</label>
			<label kind="synchronisation" x="-289" y="-136">sail_completed!</label>
			<label kind="assignment" x="-289" y="-119">motherSide[id] = !motherSide[id]// , count++</label>
			<nail x="-229" y="-68"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id2"/>
			<label kind="guard" x="-110" y="-17">motherSide[id] == boatSide</label>
			<label kind="synchronisation" x="-110" y="0">sail_passenger!</label>
			<nail x="-136" y="0"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="-552" y="-51">motherSide[id] == boatSide</label>
			<label kind="synchronisation" x="-552" y="-34">sail_control!</label>
			<label kind="assignment" x="-552" y="-17">x = 0</label>
			<nail x="-323" y="0"/>
		</transition>
	</template>
	<template>
		<name>Father</name>
		<parameter>int id</parameter>
		<declaration>clock x;
int count = 0;

bool aloneWithGirls(){
    int i;
    for (i = 0 ; i &lt; numMothers ; i++){
        if (motherSide[i] == fatherSide[id]){
            return false;
        }
    }
    for (i = 0 ; i &lt; numGirls ; i++){
        if (girlSide[i] == fatherSide[id]){
             return true;  
        }
    }
    return false;
}

</declaration>
		<location id="id5" x="-255" y="-136">
			<name x="-246" y="-161">PassengerOnBoat</name>
		</location>
		<location id="id6" x="-348" y="-212">
			<name x="-340" y="-237">OnShore</name>
			<label kind="invariant" x="-476" y="-204">!aloneWithGirls()</label>
		</location>
		<location id="id7" x="-442" y="-280">
			<name x="-467" y="-314">Sailing</name>
		</location>
		<init ref="id6"/>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-501" y="-144">sail_completed?</label>
			<label kind="assignment" x="-501" y="-127">fatherSide[id] = !fatherSide[id]</label>
			<nail x="-348" y="-136"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="guard" x="-408" y="-365">x == 2</label>
			<label kind="synchronisation" x="-408" y="-348">sail_completed!</label>
			<label kind="assignment" x="-408" y="-331">fatherSide[id] = !fatherSide[id]// , count++</label>
			<nail x="-348" y="-280"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="guard" x="-229" y="-229">fatherSide[id] == boatSide</label>
			<label kind="synchronisation" x="-229" y="-212">sail_passenger!</label>
			<nail x="-255" y="-212"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="guard" x="-671" y="-263">fatherSide[id] == boatSide</label>
			<label kind="synchronisation" x="-671" y="-246">sail_control!</label>
			<label kind="assignment" x="-671" y="-229">x = 0</label>
			<nail x="-442" y="-212"/>
		</transition>
	</template>
	<template>
		<name>PoliceOfficer</name>
		<parameter>int id</parameter>
		<declaration>clock x;
int count = 0;</declaration>
		<location id="id8" x="-255" y="-179">
			<name x="-246" y="-204">PassengerOnBoat</name>
		</location>
		<location id="id9" x="-348" y="-255">
			<name x="-340" y="-280">OnShore</name>
		</location>
		<location id="id10" x="-442" y="-323">
			<name x="-467" y="-357">Sailing</name>
		</location>
		<init ref="id9"/>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-501" y="-187">sail_completed?</label>
			<label kind="assignment" x="-501" y="-170">policeSide[id] = !policeSide[id]</label>
			<nail x="-348" y="-179"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="guard" x="-408" y="-408">x == 1</label>
			<label kind="synchronisation" x="-408" y="-391">sail_completed!</label>
			<label kind="assignment" x="-408" y="-374">policeSide[id] = !policeSide[id]// , count++</label>
			<nail x="-348" y="-323"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="guard" x="-229" y="-272">policeSide[id] == boatSide</label>
			<label kind="synchronisation" x="-229" y="-255">sail_passenger!</label>
			<nail x="-255" y="-255"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="guard" x="-671" y="-306">policeSide[id] == boatSide</label>
			<label kind="synchronisation" x="-671" y="-289">sail_control!</label>
			<label kind="assignment" x="-671" y="-272">x = 0</label>
			<nail x="-442" y="-255"/>
		</transition>
	</template>
	<template>
		<name>Girl</name>
		<parameter>int id</parameter>
		<location id="id11" x="-102" y="-196">
			<name x="-93" y="-221">PassengerOnBoat</name>
		</location>
		<location id="id12" x="-195" y="-272">
			<name x="-187" y="-297">OnShore</name>
		</location>
		<init ref="id12"/>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-348" y="-204">sail_completed?</label>
			<label kind="assignment" x="-348" y="-187">girlSide[id] = !girlSide[id]</label>
			<nail x="-195" y="-196"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id11"/>
			<label kind="guard" x="-76" y="-289">girlSide[id] == boatSide</label>
			<label kind="synchronisation" x="-76" y="-272">sail_passenger!</label>
			<nail x="-102" y="-272"/>
		</transition>
	</template>
	<template>
		<name>Boy</name>
		<parameter>int id</parameter>
		<location id="id13" x="-102" y="-196">
			<name x="-93" y="-221">PassengerOnBoat</name>
		</location>
		<location id="id14" x="-195" y="-272">
			<name x="-187" y="-297">OnShore</name>
		</location>
		<init ref="id14"/>
		<transition>
			<source ref="id13"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-348" y="-204">sail_completed?</label>
			<label kind="assignment" x="-348" y="-187">boySide[id] = !boySide[id]</label>
			<nail x="-195" y="-196"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id13"/>
			<label kind="guard" x="-76" y="-289">boySide[id] == boatSide</label>
			<label kind="synchronisation" x="-76" y="-272">sail_passenger!</label>
			<nail x="-102" y="-272"/>
		</transition>
	</template>
	<template>
		<name>Thief</name>
		<parameter>int id</parameter>
		<declaration>bool aloneWithFamily(){
    int i;
    for (i = 0; i &lt; numPolice ; i++){
        if (policeSide[i] == thiefSide[id]){
            return false;
        }
    }
    for (i = 0; i &lt; numMothers ; i++){
        if (motherSide[i] == thiefSide[id]){
            return true;
        }
    }
    for (i = 0; i &lt; numFathers ; i++){
        if (fatherSide[i] == thiefSide[id]){
            return true;
        }
    }
    for (i = 0; i &lt; numGirls ; i++){
        if (girlSide[i] == thiefSide[id]){
            return true;
        }
    }
    for (i = 0; i &lt; numBoys ; i++){
        if (boySide[i] == thiefSide[id]){
            return true;
        }
    }
    return false;
}</declaration>
		<location id="id15" x="-102" y="-196">
			<name x="-93" y="-221">PassengerOnBoat</name>
		</location>
		<location id="id16" x="-195" y="-272">
			<name x="-187" y="-297">OnShore</name>
			<label kind="invariant" x="-331" y="-263">!aloneWithFamily()</label>
		</location>
		<init ref="id16"/>
		<transition>
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="-348" y="-204">sail_completed?</label>
			<label kind="assignment" x="-348" y="-187">thiefSide[id] = !thiefSide[id]</label>
			<nail x="-195" y="-196"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id15"/>
			<label kind="guard" x="-76" y="-289">thiefSide[id] == boatSide</label>
			<label kind="synchronisation" x="-76" y="-272">sail_passenger!</label>
			<nail x="-102" y="-272"/>
		</transition>
	</template>
	<system>// Place template instantiations here.
boat = Boat();
mother = Mother(0);

//mother2 = Mother(1);
/*mother3 = Mother(2);
mother4 = Mother(3);
mother5 = Mother(4);
mother6 = Mother(5);
mother7 = Mother(6);
mother8 = Mother(7);
mother9 = Mother(8);
mother10 = Mother(9);*/

father = Father(0);
girl1 = Girl(0);
girl2 = Girl(1);
girl3 = Girl(2);
girl4 = Girl(3);
girl5 = Girl(4);
girl6 = Girl(5);
girl7 = Girl(6);
girl8 = Girl(7);
boy1 = Boy(0);
boy2 = Boy(1);
boy3 = Boy(2);
boy4 = Boy(3);
police = PoliceOfficer(0);
thief = Thief(0);
thief1 = Thief(1);
//thief2 = Thief(1);

// List one or more processes to be composed into a system.
//system boat, mother, father, girl1, girl2, girl3, girl4, girl5, girl6, girl7, girl8, boy1, boy2, boy3, boy4, police, thief, thief1;
// , mother3, mother4, mother5, mother6, mother7, mother8, mother9, mother10;//thief2;
system boat, mother, father, girl1, girl2, boy1, boy2, police, thief;</system>
</nta>
